apiVersion: apps/v1
kind: Deployment
metadata:
  name: library-backend
  labels:
    app: library-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: library-backend
  template:
    metadata:
      labels:
        app: library-backend
    spec:
      containers:
      - name: library-backend
        image: library-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "openshift"
        - name: DATABASE_URL
          value: "jdbc:mysql://mysql-service:3306/library_management?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC"
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: secret
        - name: CORS_ALLOWED_ORIGINS
          value: "*"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: library-backend-service
  labels:
    app: library-backend
spec:
  selector:
    app: library-backend
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: library-backend-route
  labels:
    app: library-backend
spec:
  host: library-backend.apps.sandbox.openshift.com
  to:
    kind: Service
    name: library-backend-service
  port:
    targetPort: 8080
  tls:
    termination: edge 